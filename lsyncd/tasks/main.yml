---
- name: Installs lsyncd
  apt: name=lsyncd state=present

- name: Create lsyncd config directory
  file: path=/etc/lsyncd state=directory

- name: Checks if ssh key is present
  stat: path="/etc/lsyncd/lsyncd_ssh_key"
  register: sshkey

- name: Create ssh key
  shell: 'rm -f /tmp/lsyncd_ssh_key && echo -e "y\n" | ssh-keygen -q -t rsa -P "" -C "lsyncd" -f /tmp/lsyncd_ssh_key'
  become: no
  run_once: true
  delegate_to: localhost
  when: not sshkey.stat.exists

- name: Add pub key to authorized keys
  authorized_key: user={{ lsyncd_user }} key="{{ lookup('file', '/tmp/lsyncd_ssh_key.pub') }}"
  when: not sshkey.stat.exists

- name: Copy private ssh key to all hosts
  copy: dest="/etc/lsyncd/lsyncd_ssh_key" content='{{ lookup("file", "/tmp/lsyncd_ssh_key") }}' mode=0600
  when: not sshkey.stat.exists

- name: Cleanup generated private key
  shell: 'rm -f /tmp/lsyncd_ssh_key'
  become: no
  run_once: true
  delegate_to: localhost
  when: not sshkey.stat.exists

- name: Add lsyncd config
  template: src=lsyncd.conf.lua.j2 dest=/etc/lsyncd/lsyncd.conf.lua
  notify: restart lsyncd

- name: Create synced dirs
  file: path={{ item }} state=directory owner={{ lsyncd_user }}
  with_items: "{{ synced_dirs }}"

- name: Logrotate config
  template: src=logrotate.conf dest=/etc/logrotate.d/lsyncd

- name: Set sysctl entry
  sysctl: name={{ item.name }} value={{ item.value }} sysctl_set=yes reload=yes state=present
  with_items:
    - { name: "fs.inotify.max_user_watches", value: 16777216 }
    - { name: "fs.inotify.max_queued_events", value: 65536 }
