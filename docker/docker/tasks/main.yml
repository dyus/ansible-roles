---
- name: Add Docker’s official GPG key
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker’s apt repository
  apt_repository: repo="deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} edge"

- name: Install Docker
  apt: name="docker-ce=17.12.0~ce-0~ubuntu" update_cache=yes cache_valid_time=3600

- name: Check docker-compose version
  shell: docker-compose --version
  ignore_errors: True
  register: compose_version

- name: Download docker-compose binary
  command: curl -Lfvs "https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64" -o /usr/local/bin/docker-compose
  when: compose_version.changed and not compose_version.stdout | search("1.19.0")

- name: Set executable for docker-compose
  file: path=/usr/local/bin/docker-compose mode=a+x

- name: Directory for compose files
  file: path=/etc/compose state=directory

- name: Update docker config
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "insecure-registries": [
          "{{ docker_registry }}"
        ],
        "log-driver": "journald",
        "log-opts": {
          "tag": "{% raw %}{{ or (.ExtraAttributes nil).SERVICE_TAG (.ExtraAttributes nil).SERVICE_NAME .ImageName }}{% endraw %}",
          "env": "SERVICE_TAG,SERVICE_NAME,SERVICE_VERSION"
        }
      }
  register: docker_config

- name: Reload docker if config changed
  service: name=docker state=restarted
  when: docker_config.changed

- name: Adding user 'ubuntu' to docker group
  user: name=ubuntu groups=docker append=yes

- cron:
    name: "Remove unused docker images"
    minute: 0
    hour: 3
    cron_file: "docker-cleanup"
    user: root
    job: "docker system prune --all --force"
